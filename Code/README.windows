=====================================================================
Building and running the Opticks source code in Windows 32-bit/64-bit
=====================================================================

=================
Required Programs
=================
The following software must be installed in order to build Opticks:
   - Visual Studio 2010 (specifically Visual C++)
      - Please note that this can be any edition of Visual C++: Express
        Edition, Professional Edition, and Team Edition will all work.
      - Also note that Visual C++ 2010 must be used.
      - Must be registered as the default program for opening .sln files.
   - Python 2.5 or later
      - Must be in PATH
   - Java 1.4.X or later
      - Must be in PATH
   - CMake 2.8.3 or later
      - Must be in PATH
   - Subversion Command Line Client
      - Must be in PATH


===================
Simple Instructions
===================
These are simple instructions intended for beginners.
These instructions should take about an hour to complete,
depending on the speed of the internet connection and the machine being used.
More detailed instructions can be found below.

The easiest way to get started is to run the appropriate batch file:
- init-win32.bat
   - 32-bit Opticks
   - Users of 32-bit Windows should choose init-win32.bat.
   - Users of Visual Studio Express should choose init-win32.bat.
- init-win64.bat
   - 64-bit Opticks
   - Must be using 64-bit Windows
This batch file will retrieve third-party dependencies from the Opticks
website, generate Visual Studio projects and solutions, and open Opticks.sln
in Visual Studio. Once Visual Studio has started and Opticks.sln is loaded,
choose "Build\Build Solution" from the main menu. After the build finishes,
you can run Opticks by selecting "Debug\Start Debugging".


=====================
Detailed Instructions
=====================
These are detailed instructions intended for advanced users.
Less detailed instructions can be found above.


Environment variables
---------------------
The following environment variables are optional and are used to override default behavior:

- OPTICKSDEPENDENCIES
   - A directory containing pre-built, third-party dependencies for the software.
   - Used for building the Opticks binaries, installers, and SDK.

- OPTICKS_CODE_DIR
   - A directory containing the source code for the software.
   - Used for building the Opticks installers and SDK.


Download Dependencies
---------------------
The Dependencies folder contains a system which automatically downloads
dependencies from the Opticks website. This system requires Java 1.4.X or later.

To delete existing dependencies and download the latest
dependencies for your platform, run this command:
> retrieve-dependencies.bat

To see details for using the dependencies system, run this command:
> dependencies.bat -p


-------------------
Using Visual Studio
-------------------
This section describes how to build and run Opticks using the Visual Studio IDE.
This is recommended for all beginning and most advanced users. Some advanced
users may choose to use the build script directly (see "Using the Build Script" below).


Generate Visual Studio Project and Solution Files
-------------------------------------------------
Opticks uses CMake to generate Visual Studio project and solution files.
While it is possible to run cmake directly, it is strongly discouraged and not
officially supported due to the complex nature of the Opticks build system.
The Code folder contains a build script which should be used to generate these files.

To generate the project and solution files, run this command:
> build.py --build-opticks=cmake --arch=<32 or 64>

This will create either a Build32 or Build64 subdirectory containing all
project files as well as the Opticks solution (Opticks.sln). Unlike the dependencies
system, this will not delete existing Build32 or Build64 directories before running,
so you may need to do so manually prior to running this command.


Compile Opticks Inside Visual Studio
------------------------------------
Open the Opticks solution.  To get to the Opticks source code in Visual
Studio, open the Opticks.sln file in Visual Studio.  This should be located
in the Build32 or Build64 folder.

To build Opticks first select your desired configuration, either
"Debug", "Release", "MinSizeRel", or "RelWithDebInfo" in the
Visual Studio Configuration Manager. Build the entire Solution.
It should build without any compiler warnings or errors. There may
be linker warnings due to missing symbols in third party dependencies.


Run Opticks Inside Visual Studio
--------------------------------
Opticks has two primary executables: Opticks and OpticksBatch.
   - If you want to run Opticks, make sure that the "Opticks"
   project is set as your start-up project and then select either
   "Debug\Start Debugging" or "Debug\Start Without Debugging" to start
   the application.
   - If you want to run OpticksBatch, make sure that the "OpticksBatch"
   project is set as your start-up project and then select either
   "Debug\Start Debugging" or "Debug\Start Without Debugging" to start
   the application.

----------------------
Using the Build Script
----------------------
This section briefly describes how to build and run Opticks using the
Opticks build script. This is only recommended for advanced users.
Here is a short list of some useful examples of running the build script:

To query the build script for help, run this command:
> build.py -h

To build Opticks in 32-bit release mode using 8 threads, run this command:
> build.py --concurrency=8 --build-opticks=core --mode=release --arch=32

To update the version number of Opticks for a release candidate, run this command:
> build.py --update-version=rc --new-version=3.1.4rc159

To use doxygen to build HTML documentation for Opticks, run this command:
> build.py --build-doxygen=html

Build output is stored in the following locations:
   - Build32\Debug
   - Build32\Release
   - Build64\Debug
   - Build64\Release

To run Opticks after building it, run Opticks.exe (or OpticksBatch.exe) from the Bin directory.
To view the HTML documentation for Opticks, open index.html from the DoxygenOutput directory.
